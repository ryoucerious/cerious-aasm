name: Build Electron App

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build for Windows
        run: npm run electron:package:windows
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: electron-windows-installer
          path: dist-electron/*.exe
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist-electron/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build for Linux
        run: npm run electron:package:linux
      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: electron-linux-appimage
          path: dist-electron/*.AppImage
      - name: Upload Linux DEB
        uses: actions/upload-artifact@v4
        with:
          name: electron-linux-deb
          path: dist-electron/*.deb
      - name: Upload Linux RPM
        uses: actions/upload-artifact@v4
        with:
          name: electron-linux-rpm
          path: dist-electron/*.rpm
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
